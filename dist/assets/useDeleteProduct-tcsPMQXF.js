import{r as i,_ as e}from"./index-ixsfXq-w.js";const p=()=>{const[n,r]=i.useState(!1),s="http://3.110.208.70:3000",c=localStorage.getItem("token");return{updateCart:async(a,t)=>{if(!a||!t||typeof t!="object")return e.error("Cart ID and valid payload are required!"),null;try{r(!0);const o=await fetch(`${s}/carts/${a}`,{method:"PUT",headers:{"Content-Type":"application/json",Authorization:`Bearer ${c}`},body:JSON.stringify(t)}),u=await o.json();return o.ok?u:(e.error("Failed to update cart!",{className:"toast-error"}),null)}catch{return e.error("An error occurred while updating the cart!",{className:"toast-error"}),null}finally{r(!1)}},loading:n}},f=()=>{const[n,r]=i.useState(!1),s="http://3.110.208.70:3000";return{deleteProduct:async l=>{const a=localStorage.getItem("token");if(!l)return e.error("Cart ID is required to delete an item!"),null;try{r(!0);const t=await fetch(`${s}/carts/${l}`,{method:"DELETE",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`}}),o=await t.json();return t.ok?o:(e.error("Failed to delete item from cart!",{className:"toast-error"}),null)}catch{return e.error("Failed to delete item from cart!",{className:"toast-error"}),null}finally{r(!1)}},loading:n}};export{p as a,f as u};
